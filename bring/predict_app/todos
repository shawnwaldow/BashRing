todos

the models are done for the database we designed. two api calls partially populate the DB. These two steps took about two weeks of class time, but class had little usable programming time because of turmoil between the instructor and administrators.

*EZ, 2hrs(really 4)
-improve db to include more fields like headliner
-->11:10=3:22 ended up MEDIUM. No more DB changes unless absolutely necesary.
$4.2

*EZ, 3 hrs
-improve dummy data a bit
-->11:00am=1:35 discovered it isn't simple because the ufc dosent provide very comprehensive api data in json for fighters. Also found an error in my weight class class. fixing that now... Well it took me 2.5 hours which was less than the 3 I predicted. That's good.
$2.5

*EZ 2 hrs.
-make a page that shows all cards to predict each and the headliner
-->Here we go 2:30pm=10:10pm. Included a couple argr%YmaeERTTH hours.
$6

*EZ distributed 3 hrs (really 6 which is the doubling estimate. That's what it took!)
-setup minipc as capstone backup.
-->here we go 10:15am=4pm For one thing you had to add your new computers home user to postgress. For another you had to install pillow which took a bunch of backing libraries installed outside the venv then you had to be back in the venv and ignore the high google results instructions and simply follow the error message kicked out by django's test server. Finished about 4 pm.
$5

*EZ 5hrs
-make a page that shows all the bouts on a card with a button to predict each
-->7:15=10:15Here we go. Going to try this using brute force without filters for 2 solid hours. Will redirect to learning filters if I am not almost done by 9:15... well i finished the brute force at 8:15 and spent the next two hours troubleshooting the url argument passing. Still have a problem with the use of {% url %} project wide... Fixed the url problem. 1 hour with 20 minutes of chris's help.
$4

*MEDIUM probaly only 2 hrs though
-learn how to filter bouts by card number. later when creating card lists from bouts with card tags we only look at a small pool of bouts?


*MEDIUM very similar to pollsite. very important. 6hrs
-make a page that collects the prediction for a single bout
-->here we go 11am...12:10 lunch 1:10-1:40

*EZ with help 2hrs
-implement bootstrap (with heroic features template)
-->1:40-2:30


*EZ with help. 3 hrs.
-add users. according to chris: the sticking point is integrating users and the things they can do into the finished product you already have.
-->11:19 working casually.11:43 breakingdown


*EZ if done last. 3 hrs-6 hrs
-make a page that shows the combined prediction for all users for each card.


*EZ or MEDIUM 4 hrs when done towards end after user creation.
-make a landing page that shows your averages, results, and predictions and a links to do the same for every other user. 

*EZ 1hr
-insert some trivial javascript




-----30 hrs programming to mvp---
+5 hours data entry.

---->So the truth (2x) is more like 70 hours probably....

----> 21 hours in tuesday morning. about 18-36 hours of solid programming left.


Then immeadiate stretch goals:

*HARD or MEDIUM with help. unknown time. Perhaps 8 hours
-further scraping for bout fight card data maybe use fightmatrix.com
-->Spent 1/2 chatting with ransom about it.

*MEDIUM. 6 hours
-further scraping for fighter info using the sherdog scraper on github

*MEDIUM 4 hours
-Forum from django